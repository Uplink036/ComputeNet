doctype html
html
  head
    title ComputeNet
    style.
      main { text-align: center; }
      .task-form { margin: 20px 0; }
      input, button { margin: 5px; padding: 8px; }
  body
    header
      h1 ComputeNet
    main
      #get-task
        h3 Get Task
        button#fetchTask Fetch Task
        p#taskDisplay

      .task-form
        h3 Submit Task
        input#number(type="number" placeholder="Number")
        input#chainLength(type="number" placeholder="Chain Length")
        button#submitTask Submit 
      #tasks
        h3 Last 5 Completed Tasks
        button#fetchResults Fetch Results
        #taskList

    script.
      document.getElementById('fetchTask').addEventListener('click', async () => {
        const response = await fetch('/api/task');
        const data = await response.json();
        document.getElementById('taskDisplay').textContent = `Task: ${data.task}`;
      });

      document.getElementById('submitTask').addEventListener('click', async () => {
        const task = parseInt(document.getElementById("number").value)
        const result = parseInt(document.getElementById("chainLength").value)
        const request = {
          method: "POST", 
          headers: {"Content-Type": "application/json"},
          body: JSON.stringify({task, result})
        }
        const response = await fetch('/api/task/submit', request);
        const data = await response.json();
      });
      
      document.getElementById('fetchResults').addEventListener('click', async () => {
        const response = await fetch('/api/results');
        const data = await response.json();
        const list = document.getElementById('taskList');
        list.innerHTML = data.results.map(r => 
          `<p>Task ${r.task}: Result ${r.result} (${new Date(r.createdAt).toLocaleString()})</p>`
        ).join('');
      });
      
      setInterval(async () => {
        const response = await fetch('/api/results');
        const data = await response.json();
        const list = document.getElementById('taskList');
        list.innerHTML = data.results.map(r => 
          `<p>Task ${r.task}: Result ${r.result} (${new Date(r.createdAt).toLocaleString()})</p>`
        ).join('');
      }, 2000);

